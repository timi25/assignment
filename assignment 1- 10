1.// Write a JavaScript function that accepts a string as a parameter and converts the first letter of each word of the string in upper case. 
function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
function capitalizeWords(string) {
    return string.replace(/(?:^|\s)\S/g, function(a) { return a.toUpperCase(); });
};

2.//Write a JavaScript function which accepts an argument and returns the type.
 function char_count(str, letter) 
{
 var letter_Count = 0;
 for (var position = 0; position < str.length; position++) 
 {
    if (str.charAt(position) == letter) 
      {
      letter_Count += 1;
      }
  }
  return letter_Count;
}

console.log(char_count('w3resource.com', 'o'));

3.//Write a JavaScript program to find the area of a triangle where lengths of the three of its sides are 5, 6, 7
var side1 = 5; 
var side2 = 6; 
var side3 = 7; 
var s = (side1 + side2 + side3)/2;
var area =  Math.sqrt(s*((s-side1)*(s-side2)*(s-side3)));
console.log(area);

4.// Write a JavaScript program that will calculate the area and perimeter of a rectangle and display it to the user using DOM
 <script> 
      var lenEl=document.querySelector("#len");
      var widEl=document.querySelector("#wid");
            
      var calcBtn=document.querySelector("#calcBtn");
            
      var areagEl=document.querySelector("#area");
      var perimeterEl=document.querySelector("#perimeter");
            
      calcBtn.onclick=function(){
                
      area=Number(lenEl.value)*Number(widEl.value)
          
      perimeter=2*(Number(lenEl.value)+Number(widEl.value))
 
      areagEl.innerHTML="Area of rectange:"+area;
      perimeterEl.innerHTML="Perimeter of rectange:"+perimeter;
       }
    </script>
 
 5.//Write a JavaScript function that reverse a number
 function reverse_a_number(n)
{
	n = n + "";
	return n.split("").reverse().join("");
}
console.log(reverse_a_number(32243));

6.//Write a JavaScript function that accepts a string as a parameter and counts the number of vowels within the string.
JavaScript Code:

function vowel_count(str1)
{
  var vowel_list = 'aeiouAEIOU';
  var vcount = 0;
  
  for(var x = 0; x < str1.length ; x++)
  {
    if (vowel_list.indexOf(str1[x]) !== -1)
    {
      vcount += 1;
    }
  
  }
  return vcount;
}
console.log(vowel_count("The quick brown fox"));

7. //Write a JavaScript function that accepts a number as a parameter and check the number is prime or not
function test_prime(n)
{

  if (n===1)
  {
    return false;
  }
  else if(n === 2)
  {
    return true;
  }else
  {
    for(var x = 2; x < n; x++)
    {
      if(n % x === 0)
      {
        return false;
      }
    }
    return true;  
  }
}

console.log(test_prime(37));

8.Write a JavaScript function which says whether a number is perfect. 
JavaScript Code:

function is_perfect(number)
{
var temp = 0;
   for(var i=1;i<=number/2;i++)
     {
         if(number%i === 0)
          {
            temp += i;
          }
     }
   
     if(temp === number && temp !== 0)
        {
       console.log("It is a perfect number.");
        } 
     else
        {
       console.log("It is not a perfect number.");
        }   
 } 
is_perfect(28);

9.//Write a JavaScript function that checks whether a passed string is palindrome or not?
//A palindrome is word, phrase, or sequence that reads the same backward as forward, e.g., madam or nurses run.
function check_Palindrome(str_entry){
   var cstr = str_entry.toLowerCase().replace(/[^a-zA-Z0-9]+/g,'');
	var ccount = 0;
	if(cstr==="") {
		console.log("Nothing found!");
		return false;
	} 
	if ((cstr.length) % 2 === 0) {
		ccount = (cstr.length) / 2;
	} else {

		if (cstr.length === 1) {
			console.log("Entry is a palindrome.");
			return true;
		} else {
			ccount = (cstr.length - 1) / 2;
		}
	}

	for (var x = 0; x < ccount; x++) { 
		if (cstr[x] != cstr.slice(-1-x)[0]) {
			console.log("Entry is not a palindrome.");
			return false;
		}
	}
	console.log("The entry is a palindrome.");
	return true;
  }
check_Palindrome('madam');
check_Palindrome('nurses run');
check_Palindrome('fox');

10.//Write a JavaScript function that generates all combinations of a string.
   //Example string : 'dog'
   //Expected Output : d,do,dog,o,og,g
   function substrings(str1)
{
var array1 = [];
  for (var x = 0, y=1; x < str1.length; x++,y++) 
  {
   array1[x]=str1.substring(x, y);
    }
var combi = [];
var temp= "";
var slent = Math.pow(2, array1.length);

for (var i = 0; i < slent ; i++)
{
    temp= "";
    for (var j=0;j<array1.length;j++) {
        if ((i & Math.pow(2,j))){ 
            temp += array1[j];
        }
    }
    if (temp !== "")
    {
        combi.push(temp);
    }
}
  console.log(combi.join("\n"));
}

substrings("dog");

